"use strict";(()=>{var e={};e.id=3841,e.ids=[3841],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4573:e=>{e.exports=require("node:buffer")},6797:e=>{e.exports=import("@trpc/server/adapters/fetch")},9915:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{h:()=>d});var i=r(70762),a=r(86240),o=r(90976),s=r(61333),c=e([a,o,s]);[a,o,s]=c.then?(await c)():c;let d=(0,a.QB)({me:a.sy.query(async({ctx:e})=>{let t=e.session.user.id,r=await (0,o.kl)(t);if(!r)throw new s.TRPCError({code:"NOT_FOUND",message:"User not found"});return{id:r.id,name:r.name,email:r.email,image:r.image,role:r.role}}),updateProfile:a.sy.input(i.z.object({name:i.z.string().optional(),image:i.z.string().url().optional()})).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,n=await (0,o.eg)(r,t);if(!n)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update profile"});return{id:n.id,name:n.name,email:n.email,image:n.image}}),register:a.JI.input(i.z.object({name:i.z.string().optional(),email:i.z.string().email(),password:i.z.string().min(8)})).mutation(async({input:e})=>{let{name:t,email:r,password:n}=e;if(await (0,o.ht)(r))throw new s.TRPCError({code:"CONFLICT",message:"User already exists"});if(!await (0,o.kg)({name:t,email:r,password:n}))throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to create user"});return{success:!0,message:"User registered successfully"}}),getAll:a.ZS.query(async()=>[{id:"1",name:"Admin User",email:"admin@example.com",role:"admin"},{id:"2",name:"Regular User",email:"user@example.com",role:"user"}])});n()}catch(e){n(e)}})},10788:e=>{e.exports=import("drizzle-orm/mysql-core")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11737:e=>{e.exports=import("drizzle-orm")},12432:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{W:()=>s});var i=r(58178),a=r(98072),o=e([i]);i=(o.then?(await o)():o)[0];class s{constructor(){this.apiVersion="v3"}async getAuthStatus(){let e=await (0,i.j2)();return e?.user&&(0,a.F0)(e,"hubspot")?{isAuthenticated:!0,accountId:e.user.id}:{isAuthenticated:!1}}async disconnect(){try{return await (0,i.CI)({redirect:!1}),!0}catch(e){return!1}}async authenticate(){try{return await (0,i.Jv)("hubspot",{redirect:!0}),!0}catch(e){return!1}}async getUserInfo(){let e=await (0,i.j2)();if(!(0,a.F0)(e,"hubspot"))throw new a.v3("Not authenticated with HubSpot");let t=e.token.accessToken,r=await fetch("https://api.hubapi.com/integrations/v1/me",{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(!r.ok)throw Error(`Failed to get user info: ${r.statusText}`);return await r.json()}async getContacts(e=10){let t=await (0,i.j2)();if(!(0,a.F0)(t,"hubspot"))throw new a.v3("Not authenticated with HubSpot");let r=t.token.accessToken,n=`https://api.hubapi.com/crm/${this.apiVersion}/objects/contacts?limit=${e}`,o=await fetch(n,{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!o.ok)throw Error(`Failed to get contacts: ${o.statusText}`);return await o.json()}async createContact(e){let t=await (0,i.j2)();if(!(0,a.F0)(t,"hubspot"))throw new a.v3("Not authenticated with HubSpot");let r=t.token.accessToken,n=`https://api.hubapi.com/crm/${this.apiVersion}/objects/contacts`,o=await fetch(n,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({properties:e})});if(!o.ok)throw Error(`Failed to create contact: ${o.statusText}`);return await o.json()}async getDeals(e=10){let t=await (0,i.j2)();if(!(0,a.F0)(t,"hubspot"))throw new a.v3("Not authenticated with HubSpot");let r=t.token.accessToken,n=`https://api.hubapi.com/crm/${this.apiVersion}/objects/deals?limit=${e}`,o=await fetch(n,{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!o.ok)throw Error(`Failed to get deals: ${o.statusText}`);return await o.json()}}n()}catch(e){n(e)}})},17862:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.r(t),r.d(t,{patchFetch:()=>d,routeModule:()=>u,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var i=r(96559),a=r(48088),o=r(37719),s=r(88247),c=e([s]);s=(c.then?(await c)():c)[0];let u=new i.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/trpc/[trpc]/route",pathname:"/api/trpc/[trpc]",filename:"route",bundlePath:"app/api/trpc/[trpc]/route"},resolvedPagePath:"/Users/jacob/projects/nuco/src/app/api/trpc/[trpc]/route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:m}=u;function d(){return(0,o.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}n()}catch(e){n(e)}})},19121:e=>{e.exports=require("next/dist/server/app-render/action-async-storage.external.js")},21820:e=>{e.exports=require("os")},22357:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{r:()=>E});var i=r(70762),a=r(86240),o=r(24522),s=r(61333),c=r(43074),d=r(49023),u=r(92206),l=e([a,o,s,c,d,u]);[a,o,s,c,d,u]=l.then?(await l)():l;let g=i.z.object({entityType:i.z.string(),entityId:i.z.string().uuid(),key:i.z.string(),value:i.z.record(i.z.any())}),m=i.z.object({entityType:i.z.string(),entityId:i.z.string().uuid(),key:i.z.string()}),w=i.z.object({entityType:i.z.string(),entityId:i.z.string().uuid()}),p=i.z.object({userId:i.z.string().uuid()}),y=i.z.object({organizationId:i.z.string().uuid()}),h=i.z.object({integrationId:i.z.string().uuid()}),R=i.z.object({key:i.z.string(),value:i.z.any()}),f=i.z.object({key:i.z.string()}),E=(0,a.QB)({getMetadata:a.sy.input(m).query(async({input:e})=>o.yb(e.entityType,e.entityId,e.key)),getAllMetadata:a.sy.input(w).query(async({input:e})=>o.js(e.entityType,e.entityId)),setMetadata:a.sy.input(g).mutation(async({input:e})=>{let t=await o.kq({entityType:e.entityType,entityId:e.entityId,key:e.key,value:e.value});if(!t.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set metadata"});return t[0]}),deleteMetadata:a.sy.input(m).mutation(async({input:e})=>{let t=await o.$u(e.entityType,e.entityId,e.key);if(!t.length)throw new s.TRPCError({code:"NOT_FOUND",message:"Metadata not found"});return t[0]}),deleteAllMetadata:a.sy.input(w).mutation(async({input:e})=>o.wz(e.entityType,e.entityId)),getUserPreferences:a.sy.input(p).query(async({input:e})=>o.oE(e.userId)),getMyPreferences:a.sy.query(async({ctx:e})=>{if(!e.session.user?.id)throw new s.TRPCError({code:"UNAUTHORIZED",message:"User not authenticated"});return o.oE(e.session.user.id)}),setUserPreferences:a.sy.input(c.UV.omit({id:!0,createdAt:!0,updatedAt:!0})).mutation(async({input:e})=>{let t={userId:e.userId,theme:e.theme,timezone:e.timezone,locale:e.locale,notifications:e.notifications,dashboardLayout:e.dashboardLayout?{widgets:Array.isArray(e.dashboardLayout.widgets)?e.dashboardLayout.widgets.map(e=>({id:String(e.id),type:String(e.type),position:{x:Number(e.position.x),y:Number(e.position.y),w:Number(e.position.w),h:Number(e.position.h)},settings:e.settings})):[]}:void 0,customization:e.customization?{accentColor:e.customization.accentColor,fontSize:e.customization.fontSize,compactMode:!!e.customization.compactMode}:void 0},r=await o.A2(t);if(!r.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set user preferences"});return r[0]}),getUserFlexiblePreferences:a.sy.input(f).query(async({input:e,ctx:t})=>{if(!t.session.user?.id)throw new s.TRPCError({code:"UNAUTHORIZED",message:"User not authenticated"});return await o.yb("user",t.session.user.id,e.key)}),setUserFlexiblePreferences:a.sy.input(R).mutation(async({input:e,ctx:t})=>{if(!t.session.user?.id)throw new s.TRPCError({code:"UNAUTHORIZED",message:"User not authenticated"});let r=await o.kq({entityType:"user",entityId:t.session.user.id,key:e.key,value:e.value});if(!r.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set user preference metadata"});return r[0]}),updateMyPreferences:a.sy.input(i.z.object({theme:i.z.enum(["light","dark","system"]).optional(),timezone:i.z.string().optional(),locale:i.z.string().optional(),notifications:i.z.object({email:i.z.boolean(),inApp:i.z.boolean(),marketingEmails:i.z.boolean(),slackMessages:i.z.boolean()}).optional(),customization:i.z.object({accentColor:i.z.string().optional(),fontSize:i.z.enum(["small","medium","large"]).optional(),compactMode:i.z.boolean().optional()}).optional()})).mutation(async({input:e,ctx:t})=>{if(!t.session.user?.id)throw new s.TRPCError({code:"UNAUTHORIZED",message:"User not authenticated"});let r=await o.PK(t.session.user.id,e);if(!r.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update user preferences"});return r[0]}),getOrganizationSettings:a.sy.input(y).query(async({input:e})=>o.N0(e.organizationId)),setOrganizationSettings:a.sy.input(d.LN.omit({id:!0,createdAt:!0,updatedAt:!0})).mutation(async({input:e})=>{let t={organizationId:e.organizationId,defaultIntegrations:Array.isArray(e.defaultIntegrations)?[...e.defaultIntegrations]:e.defaultIntegrations,memberDefaultRole:e.memberDefaultRole,slackSettings:e.slackSettings?{notifyOnNewMembers:!!e.slackSettings.notifyOnNewMembers,notifyOnIntegrationChanges:!!e.slackSettings.notifyOnIntegrationChanges,defaultChannels:Array.isArray(e.slackSettings.defaultChannels)?e.slackSettings.defaultChannels.map(e=>String(e)):void 0,webhookUrl:e.slackSettings.webhookUrl?String(e.slackSettings.webhookUrl):void 0}:e.slackSettings,aiSettings:e.aiSettings?{defaultModel:String(e.aiSettings.defaultModel),maxTokensPerRequest:Number(e.aiSettings.maxTokensPerRequest),promptTemplates:Array.isArray(e.aiSettings.promptTemplates)?e.aiSettings.promptTemplates.map(e=>({id:String(e.id),name:String(e.name),isDefault:!!e.isDefault})):[]}:null},r=await o.zR(t);if(!r.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set organization settings"});return r[0]}),updateOrganizationSettings:a.sy.input(i.z.object({organizationId:i.z.string().uuid(),defaultIntegrations:i.z.array(i.z.string()).optional(),memberDefaultRole:i.z.enum(["member","admin"]).optional(),slackSettings:i.z.object({notifyOnNewMembers:i.z.boolean().optional(),notifyOnIntegrationChanges:i.z.boolean().optional(),defaultChannels:i.z.array(i.z.string()).optional(),webhookUrl:i.z.string().optional()}).optional(),aiSettings:i.z.object({defaultModel:i.z.string(),maxTokensPerRequest:i.z.number(),promptTemplates:i.z.array(i.z.object({id:i.z.string(),name:i.z.string(),isDefault:i.z.boolean().optional()})),contextSettings:i.z.object({includeUserHistory:i.z.boolean(),includeOrganizationData:i.z.boolean(),contextWindowSize:i.z.number()}).optional()}).optional()})).mutation(async({input:e})=>{let{organizationId:t,...r}=e,n={...r};if(n.aiSettings){let{aiSettings:e}=n,r=await o.N0(t),i=r?.aiSettings;i&&(n.aiSettings={defaultModel:e.defaultModel??i.defaultModel,maxTokensPerRequest:e.maxTokensPerRequest??i.maxTokensPerRequest,promptTemplates:e.promptTemplates??i.promptTemplates,contextSettings:e.contextSettings??i.contextSettings})}let i=await o.iJ(t,n);if(!i.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update organization settings"});return i[0]}),getIntegrationSettings:a.sy.input(h).query(async({input:e})=>o.SR(e.integrationId)),setIntegrationSettings:a.sy.input(u.oZ.omit({id:!0,createdAt:!0,updatedAt:!0})).mutation(async({input:e})=>{let t={integrationId:e.integrationId,syncFrequency:e.syncFrequency,syncSettings:e.syncSettings?{lastSyncTime:e.syncSettings.lastSyncTime,objectsToSync:Array.isArray(e.syncSettings.objectsToSync)?e.syncSettings.objectsToSync:void 0,fieldMappings:e.syncSettings.fieldMappings}:null,webhookSettings:e.webhookSettings?{enabled:e.webhookSettings.enabled,events:Array.isArray(e.webhookSettings.events)?e.webhookSettings.events:void 0,url:e.webhookSettings.url,secret:e.webhookSettings.secret}:null,apiSettings:e.apiSettings?{rateLimit:e.apiSettings.rateLimit,timeout:e.apiSettings.timeout,retryPolicy:e.apiSettings.retryPolicy}:null},r=await o.ub(t);if(!r.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set integration settings"});return r[0]}),updateIntegrationSettings:a.sy.input(i.z.object({integrationId:i.z.string().uuid(),syncFrequency:i.z.enum(["realtime","hourly","daily","weekly"]).optional(),syncSettings:i.z.object({lastSyncTime:i.z.string().optional(),objectsToSync:i.z.array(i.z.string()).optional(),fieldMappings:i.z.record(i.z.string()).optional()}).optional(),webhookSettings:i.z.object({enabled:i.z.boolean().optional(),events:i.z.array(i.z.string()).optional(),url:i.z.string().url().optional(),secret:i.z.string().optional()}).optional(),apiSettings:i.z.object({rateLimit:i.z.number().optional(),timeout:i.z.number().optional(),retryPolicy:i.z.object({maxRetries:i.z.number(),backoffFactor:i.z.number()}).optional()}).optional()})).mutation(async({input:e})=>{let{integrationId:t,...r}=e,n=await o.HS(t,r);if(!n.length)throw new s.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update integration settings"});return n[0]})});n()}catch(e){n(e)}})},24522:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{$u:()=>w,A2:()=>h,HS:()=>T,N0:()=>f,PK:()=>R,SR:()=>I,iJ:()=>z,js:()=>g,kq:()=>m,oE:()=>y,ub:()=>b,wz:()=>p,yb:()=>l,zR:()=>E});var i=r(71682),a=r(11737),o=r(47575),s=r(43074),c=r(49023),d=r(92206),u=e([i,a,o,s,c,d]);async function l(e,t,r){return(await i.db.select().from(o.yu).where((0,a.and)((0,a.eq)(o.yu.entityType,e),(0,a.eq)(o.yu.entityId,t),(0,a.eq)(o.yu.key,r))).limit(1))[0]||null}async function g(e,t){return i.db.select().from(o.yu).where((0,a.and)((0,a.eq)(o.yu.entityType,e),(0,a.eq)(o.yu.entityId,t)))}async function m(e){let t=await l(e.entityType,e.entityId,e.key);return t?i.db.update(o.yu).set({value:e.value,updatedAt:new Date}).where((0,a.eq)(o.yu.id,t.id)).returning():i.db.insert(o.yu).values(e).returning()}async function w(e,t,r){return i.db.delete(o.yu).where((0,a.and)((0,a.eq)(o.yu.entityType,e),(0,a.eq)(o.yu.entityId,t),(0,a.eq)(o.yu.key,r))).returning()}async function p(e,t){return i.db.delete(o.yu).where((0,a.and)((0,a.eq)(o.yu.entityType,e),(0,a.eq)(o.yu.entityId,t))).returning()}async function y(e){return(await i.db.select().from(s.KY).where((0,a.eq)(s.KY.userId,e)).limit(1))[0]||null}async function h(e){let t=await y(e.userId);return t?i.db.update(s.KY).set({...e,updatedAt:new Date}).where((0,a.eq)(s.KY.id,t.id)).returning():i.db.insert(s.KY).values(e).returning()}async function R(e,t){let r=await y(e);return r?i.db.update(s.KY).set({...t,updatedAt:new Date}).where((0,a.eq)(s.KY.id,r.id)).returning():h({userId:e,...t})}async function f(e){return(await i.db.select().from(c.$u).where((0,a.eq)(c.$u.organizationId,e)).limit(1))[0]||null}async function E(e){let t=await f(e.organizationId);return t?i.db.update(c.$u).set({...e,updatedAt:new Date}).where((0,a.eq)(c.$u.id,t.id)).returning():i.db.insert(c.$u).values(e).returning()}async function z(e,t){let r=await f(e);return r?i.db.update(c.$u).set({...t,updatedAt:new Date}).where((0,a.eq)(c.$u.id,r.id)).returning():E({organizationId:e,...t})}async function I(e){return(await i.db.select().from(d.KA).where((0,a.eq)(d.KA.integrationId,e)).limit(1))[0]||null}async function b(e){let t=await I(e.integrationId);return t?i.db.update(d.KA).set({...e,updatedAt:new Date}).where((0,a.eq)(d.KA.id,t.id)).returning():i.db.insert(d.KA).values(e).returning()}async function T(e,t){let r=await I(e);return r?i.db.update(d.KA).set({...t,updatedAt:new Date}).where((0,a.eq)(d.KA.id,r.id)).returning():b({integrationId:e,...t})}[i,a,o,s,c,d]=u.then?(await u)():u,n()}catch(e){n(e)}})},28354:e=>{e.exports=require("util")},29021:e=>{e.exports=require("fs")},29195:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{v:()=>u});var i=r(58178),a=r(74436),o=r(12432),s=r(67319),c=r(98072),d=e([i,a,o,s]);[i,a,o,s]=d.then?(await d)():d;class u{static async createIntegration(e){switch(e){case"salesforce":return new a.i;case"hubspot":return new o.W;case"google":return{async getAuthStatus(){let e=await (0,i.j2)();return{isAuthenticated:(0,c.F0)(e,"google"),accountId:e?.user?.id}},disconnect:async()=>!0};case"slack":return(0,s.jo)({clientId:process.env.SLACK_CLIENT_ID||"",clientSecret:process.env.SLACK_CLIENT_SECRET||"",signingSecret:process.env.SLACK_SIGNING_SECRET,scopes:["chat:write","channels:read","users:read","team:read","chat:write.public","incoming-webhook"]});default:throw Error(`Unknown integration type: ${e}`)}}static getAvailableIntegrations(){return["salesforce","hubspot","slack"]}static getIntegrationDetails(e){switch(e){case"salesforce":return{name:"Salesforce",description:"Connect to Salesforce to access your CRM data",icon:"/icons/salesforce.svg",documentationUrl:"https://developer.salesforce.com/docs"};case"hubspot":return{name:"HubSpot",description:"Connect to HubSpot to access your marketing, sales, and service data",icon:"/icons/hubspot.svg",documentationUrl:"https://developers.hubspot.com/docs"};case"google":return{name:"Google",description:"Connect to Google to access Gmail, Calendar, and Drive",icon:"/icons/google.svg",documentationUrl:"https://developers.google.com/docs"};case"slack":return{name:"Slack",description:"Connect to Slack to access your workspace data",icon:"/icons/slack.svg",documentationUrl:"https://api.slack.com/docs"};default:throw Error(`Unknown integration type: ${e}`)}}static async getAuthStatus(e){let t=await (0,i.j2)();if(!t?.user)return{isAuthenticated:!1};if((0,c.F0)(t,e))return{isAuthenticated:!0,accountId:t.user.id};try{let t=await u.createIntegration(e);return await t.getAuthStatus()}catch(e){return{isAuthenticated:!1}}}}n()}catch(e){n(e)}})},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},34882:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{P:()=>l});var i=r(86240),a=r(9915),o=r(71104),s=r(85270),c=r(85507),d=r(22357),u=e([i,a,o,s,c,d]);[i,a,o,s,c,d]=u.then?(await u)():u;let l=(0,i.QB)({user:a.h,integration:o.W,ai:s.a,organization:c.n,metadata:d.r});n()}catch(e){n(e)}})},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},50466:(e,t,r)=>{r.d(t,{_:()=>a});var n=r(64745);let i=process.env.STRIPE_SECRET_KEY,a=new n.A(i||"",{apiVersion:"2025-02-24.acacia",appInfo:{name:"Nuco-App",version:"0.1.0"}})},52700:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{PC:()=>g,du:()=>l,ff:()=>d,fw:()=>u});var i=r(50466),a=r(71682),o=r(32767),s=r(11737),c=e([a,o,s]);async function d(e){let{email:t,name:r,organizationId:n}=e;try{let e=await i._.customers.create({email:t,name:r||void 0,metadata:n?{organizationId:n}:void 0});return n&&await a.db.update(o.organizations).set({stripeCustomerId:e.id}).where((0,s.eq)(o.organizations.id,n)),e}catch(e){throw Error("Failed to create Stripe customer")}}async function u(e){let{priceId:t,customerId:r,successUrl:n,cancelUrl:a,metadata:o,trialDays:s}=e;try{return await i._.checkout.sessions.create({customer:r,payment_method_types:["card"],line_items:[{price:t,quantity:1}],mode:"subscription",subscription_data:s?{trial_period_days:s}:void 0,success_url:n,cancel_url:a,metadata:o})}catch(e){throw Error("Failed to create checkout session")}}async function l(e){let{customerId:t,returnUrl:r}=e;try{return await i._.billingPortal.sessions.create({customer:t,return_url:r})}catch(e){throw Error("Failed to create customer portal session")}}async function g(){try{let e=await i._.products.list({active:!0,expand:["data.default_price"]});return(await i._.prices.list({active:!0,expand:["data.product"]})).data.filter(e=>"recurring"===e.type).map(t=>{let r=e.data.find(e=>e.id===t.product);return{id:t.id,name:r?.name||"Unknown Product",amount:t.unit_amount||0,currency:t.currency,interval:t.recurring?.interval,description:r?.description||void 0,features:r?.metadata?.features?JSON.parse(r.metadata.features):void 0}})}catch(e){throw Error("Failed to fetch products and prices")}}[a,o,s]=c.then?(await c)():c,n()}catch(e){n(e)}})},55511:e=>{e.exports=require("crypto")},55591:e=>{e.exports=require("https")},56473:e=>{e.exports=import("drizzle-orm/neon-http")},57238:e=>{e.exports=import("drizzle-orm/sqlite-core")},57975:e=>{e.exports=require("node:util")},58025:e=>{e.exports=import("drizzle-orm/pg-core")},61333:e=>{e.exports=import("@trpc/server")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},70622:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{Lr:()=>u,Ub:()=>g,YY:()=>m,xN:()=>l});var i=r(71682),a=r(32767),o=r(11737),s=r(52700),c=e([i,a,o,s]);async function d(e,t,r){let n=await i.db.select().from(a.organizations).where((0,o.eq)(a.organizations.id,e)).then(e=>e[0]);if(!n)throw Error(`Organization not found: ${e}`);return n.stripeCustomerId?n.stripeCustomerId:(await (0,s.ff)({email:t,name:r,organizationId:e})).id}async function u(e){let{organizationId:t,priceId:r,successUrl:n,cancelUrl:i,email:a,name:o,trialDays:c}=e,u=await d(t,a,o);return await (0,s.fw)({priceId:r,customerId:u,successUrl:n,cancelUrl:i,metadata:{organizationId:t},trialDays:c})}async function l(e){let{organizationId:t,returnUrl:r}=e,n=await i.db.select().from(a.organizations).where((0,o.eq)(a.organizations.id,t)).then(e=>e[0]);if(!n)throw Error(`Organization not found: ${t}`);if(!n.stripeCustomerId)throw Error(`Organization does not have a Stripe customer ID: ${t}`);return await (0,s.du)({customerId:n.stripeCustomerId,returnUrl:r})}async function g(e){let t=await i.db.select().from(a.organizations).where((0,o.eq)(a.organizations.id,e)).then(e=>e[0]);if(!t)throw Error(`Organization not found: ${e}`);return{plan:t.plan||"free",status:t.stripeSubscriptionStatus,currentPeriodEnd:t.subscriptionCurrentPeriodEnd,cancelAtPeriodEnd:t.cancelAtPeriodEnd||!1}}async function m(){return(0,s.PC)()}[i,a,o,s]=c.then?(await c)():c,n()}catch(e){n(e)}})},71104:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{W:()=>w});var i=r(70762),a=r(86240),o=r(61333),s=r(71682),c=r(32767),d=r(11737),u=r(29195),l=e([a,o,s,c,d,u]);[a,o,s,c,d,u]=l.then?(await l)():l;let g=i.z.object({type:i.z.enum(["salesforce","hubspot","google","slack"]),name:i.z.string().min(1).max(100),config:i.z.record(i.z.any())}),m=i.z.object({id:i.z.string().uuid(),name:i.z.string().min(1).max(100).optional(),config:i.z.record(i.z.any()).optional(),isActive:i.z.boolean().optional()}),w=(0,a.QB)({getAll:a.sy.input(i.z.object({organizationId:i.z.string().uuid().optional()}).optional()).query(async({ctx:e,input:t})=>{let r=e.session.user.id;try{let n=[];return(t?.organizationId?[...(await s.db.select({integration:c.integrations,ownerName:c.users.name,ownerId:c.users.id}).from(c.integrations).leftJoin(c.users,(0,d.eq)(c.integrations.userId,c.users.id)).where((0,d.eq)(c.integrations.organizationId,t.organizationId))).map(({integration:e,ownerName:t,ownerId:n})=>({...e,owner:{id:n,name:t||"Unknown",isCurrentUser:n===r}}))]:(await s.db.select().from(c.integrations).where((0,d.eq)(c.integrations.userId,r))).map(t=>({...t,owner:{id:r,name:e.session.user.name||"You",isCurrentUser:!0}}))).map(e=>({id:e.id,name:e.name,type:e.type,status:e.isActive?"connected":"disconnected",lastSynced:e.lastSyncedAt?.toISOString()||null,config:e.config,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString(),owner:e.owner}))}catch(e){throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch integrations"})}}),getAvailableTypes:a.sy.query(async()=>{try{return u.v.getAvailableIntegrations().map(e=>{let t=u.v.getIntegrationDetails(e);return{type:e,name:t.name,description:t.description,icon:t.icon,documentationUrl:t.documentationUrl}})}catch(e){throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch available integration types"})}}),getAuthStatus:a.sy.query(async()=>{try{let e=u.v.getAvailableIntegrations(),t=Object.fromEntries(e.map(e=>[e,{isAuthenticated:!1}]));return await Promise.all(e.map(async e=>{try{let r=await u.v.getAuthStatus(e);t[e]=r}catch(r){t[e]={isAuthenticated:!1}}})),t}catch(e){throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch authentication status"})}}),getById:a.sy.input(i.z.object({id:i.z.string().uuid()})).query(async({ctx:e,input:t})=>{let r=e.session.user.id,{id:n}=t;try{let[e]=await s.db.select().from(c.integrations).where((0,d.and)((0,d.eq)(c.integrations.id,n),(0,d.eq)(c.integrations.userId,r)));if(!e)throw new o.TRPCError({code:"NOT_FOUND",message:"Integration not found"});return{id:e.id,name:e.name,type:e.type,status:e.isActive?"connected":"disconnected",lastSynced:e.lastSyncedAt?.toISOString()||null,config:e.config,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString()}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch integration"})}}),create:a.sy.input(g).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,{type:n,name:i,config:a}=t;try{try{u.v.createIntegration(n)}catch{throw new o.TRPCError({code:"BAD_REQUEST",message:`Unsupported integration type: ${n}`})}let[e]=await s.db.insert(c.integrations).values({userId:r,type:n,name:i,config:a,isActive:!0}).returning();return{id:e.id,name:e.name,type:e.type,status:"connected",config:e.config,createdAt:e.createdAt.toISOString()}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to create integration"})}}),update:a.sy.input(m).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,{id:n,...i}=t;try{let[e]=await s.db.select().from(c.integrations).where((0,d.and)((0,d.eq)(c.integrations.id,n),(0,d.eq)(c.integrations.userId,r)));if(!e)throw new o.TRPCError({code:"NOT_FOUND",message:"Integration not found"});let[t]=await s.db.update(c.integrations).set({...i,updatedAt:new Date}).where((0,d.eq)(c.integrations.id,n)).returning();return{id:t.id,name:t.name,type:t.type,status:t.isActive?"connected":"disconnected",config:t.config,updatedAt:t.updatedAt.toISOString()}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update integration"})}}),disconnect:a.sy.input(i.z.object({id:i.z.string().uuid()})).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,{id:n}=t;try{let[e]=await s.db.select().from(c.integrations).where((0,d.and)((0,d.eq)(c.integrations.id,n),(0,d.eq)(c.integrations.userId,r)));if(!e)throw new o.TRPCError({code:"NOT_FOUND",message:"Integration not found"});return await s.db.update(c.integrations).set({isActive:!1,updatedAt:new Date}).where((0,d.eq)(c.integrations.id,n)),{success:!0,message:"Integration disconnected successfully"}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to disconnect integration"})}}),delete:a.sy.input(i.z.object({id:i.z.string().uuid()})).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,{id:n}=t;try{let[e]=await s.db.select().from(c.integrations).where((0,d.and)((0,d.eq)(c.integrations.id,n),(0,d.eq)(c.integrations.userId,r)));if(!e)throw new o.TRPCError({code:"NOT_FOUND",message:"Integration not found"});return await s.db.delete(c.integrations).where((0,d.eq)(c.integrations.id,n)),{success:!0,message:"Integration deleted successfully"}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to delete integration"})}}),sync:a.sy.input(i.z.object({id:i.z.string().uuid()})).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id,{id:n}=t;try{let[e]=await s.db.select().from(c.integrations).where((0,d.and)((0,d.eq)(c.integrations.id,n),(0,d.eq)(c.integrations.userId,r)));if(!e)throw new o.TRPCError({code:"NOT_FOUND",message:"Integration not found"});if(!e.isActive)throw new o.TRPCError({code:"BAD_REQUEST",message:"Cannot sync a disconnected integration"});u.v.createIntegration(e.type);let t=new Date,[i]=await s.db.update(c.integrations).set({lastSyncedAt:t,updatedAt:t}).where((0,d.eq)(c.integrations.id,n)).returning();return{success:!0,message:"Integration synced successfully",lastSynced:i.lastSyncedAt?.toISOString()}}catch(e){if(e instanceof o.TRPCError)throw e;throw new o.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to sync integration"})}})});n()}catch(e){n(e)}})},74436:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{i:()=>s});var i=r(58178),a=r(98072),o=e([i]);i=(o.then?(await o)():o)[0];class s{constructor(){this.apiVersion="v56.0"}async getAuthStatus(){let e=await (0,i.j2)();return e?.user&&(0,a.F0)(e,"salesforce")?{isAuthenticated:!0,accountId:e.user.id}:{isAuthenticated:!1}}async disconnect(){try{return await (0,i.CI)({redirect:!1}),!0}catch(e){return!1}}async authenticate(){try{return await (0,i.Jv)("salesforce",{redirect:!0}),!0}catch(e){return!1}}async getUserInfo(){let e=await (0,i.j2)();if(!(0,a.F0)(e,"salesforce"))throw new a.v3("Not authenticated with Salesforce");let t=e.token.accessToken,r=await fetch("https://login.salesforce.com/services/oauth2/userinfo",{headers:{Authorization:`Bearer ${t}`}});if(!r.ok)throw Error(`Failed to get user info: ${r.statusText}`);return await r.json()}async query(e){let t=await (0,i.j2)();if(!(0,a.F0)(t,"salesforce"))throw new a.v3("Not authenticated with Salesforce");let r=t.token.accessToken,n=await this.getUserInfo();if(!n?.instance_url)throw Error("Failed to get Salesforce instance URL");let o=n.instance_url,s=encodeURIComponent(e),c=`${o}/services/data/${this.apiVersion}/query?q=${s}`,d=await fetch(c,{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!d.ok)throw Error(`Salesforce query failed: ${d.statusText}`);return await d.json()}async createRecord(e,t){let r=await (0,i.j2)();if(!r?.token?.accessToken||r.token?.provider!=="salesforce")throw Error("Not authenticated with Salesforce");let n=r.token.accessToken,a=await this.getUserInfo();if(!a?.instance_url)throw Error("Failed to get Salesforce instance URL");let o=a.instance_url,s=`${o}/services/data/${this.apiVersion}/sobjects/${e}`,c=await fetch(s,{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!c.ok)throw Error(`Failed to create record: ${c.statusText}`);return await c.json()}}n()}catch(e){n(e)}})},77598:e=>{e.exports=require("node:crypto")},79646:e=>{e.exports=require("child_process")},81630:e=>{e.exports=require("http")},85270:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{a:()=>h});var i=r(70762),a=r(61333),o=r(46142),s=r(86240),c=r(71682),d=r(32767),u=r(11737),l=r(14590),g=r(99040),m=e([a,s,c,d,u]);[a,s,c,d,u]=m.then?(await m)():m;let w=i.z.object({title:i.z.string().min(1).max(100)}),p=i.z.object({id:i.z.string().uuid(),title:i.z.string().min(1).max(100)}),y=i.z.object({conversationId:i.z.string().uuid(),content:i.z.string().min(1),role:i.z.enum(["user","assistant","system"]),modelId:i.z.string().optional()});i.z.object({conversationId:i.z.string().uuid(),message:i.z.string().min(1),systemPrompt:i.z.string().optional(),modelId:i.z.string().optional(),temperature:i.z.number().min(0).max(2).optional(),topP:i.z.number().min(0).max(1).optional(),frequencyPenalty:i.z.number().min(0).max(2).optional(),presencePenalty:i.z.number().min(0).max(2).optional(),maxTokens:i.z.number().optional()});let h=(0,s.QB)({getModels:s.sy.query(()=>l.om.map(e=>({id:e.id,name:e.name,provider:e.provider}))),getProviders:s.sy.query(()=>l.dh.options),getConversations:s.sy.query(async({ctx:e})=>{let t=e.session.user.id;try{return(await c.db.query.conversations.findMany({where:(0,u.eq)(d.conversations.userId,t),orderBy:[(0,u.desc)(d.conversations.updatedAt)],with:{messages:{limit:1,orderBy:[(0,u.desc)(d.messages.createdAt)]}}})).map(e=>({id:e.id,title:e.title,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString(),lastMessageAt:e.lastMessageAt.toISOString(),lastMessage:e.messages[0]?.content||null}))}catch(e){throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch conversations"})}}),getConversation:s.sy.input(i.z.object({id:i.z.string().uuid()})).query(async({ctx:e,input:t})=>{let r=e.session.user.id;try{let e=await c.db.query.conversations.findFirst({where:(0,u.and)((0,u.eq)(d.conversations.id,t.id),(0,u.eq)(d.conversations.userId,r)),with:{messages:{orderBy:[d.messages.createdAt]}}});if(!e)throw new a.TRPCError({code:"NOT_FOUND",message:"Conversation not found"});return{id:e.id,title:e.title,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString(),lastMessageAt:e.lastMessageAt.toISOString(),messages:e.messages.map(e=>({id:e.id,role:e.role,content:e.content,tokens:e.tokens,modelId:e.modelId,createdAt:e.createdAt.toISOString()}))}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch conversation"})}}),createConversation:s.sy.input(w).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id;try{let[e]=await c.db.insert(d.conversations).values({id:(0,o.A)(),userId:r,title:t.title}).returning();return{id:e.id,title:e.title,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString(),lastMessageAt:e.lastMessageAt.toISOString()}}catch(e){throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to create conversation"})}}),updateConversation:s.sy.input(p).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id;try{if(!await c.db.query.conversations.findFirst({where:(0,u.and)((0,u.eq)(d.conversations.id,t.id),(0,u.eq)(d.conversations.userId,r))}))throw new a.TRPCError({code:"NOT_FOUND",message:"Conversation not found"});let[e]=await c.db.update(d.conversations).set({title:t.title,updatedAt:new Date}).where((0,u.eq)(d.conversations.id,t.id)).returning();return{id:e.id,title:e.title,createdAt:e.createdAt.toISOString(),updatedAt:e.updatedAt.toISOString(),lastMessageAt:e.lastMessageAt.toISOString()}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update conversation"})}}),deleteConversation:s.sy.input(i.z.object({id:i.z.string().uuid()})).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id;try{if(!await c.db.query.conversations.findFirst({where:(0,u.and)((0,u.eq)(d.conversations.id,t.id),(0,u.eq)(d.conversations.userId,r))}))throw new a.TRPCError({code:"NOT_FOUND",message:"Conversation not found"});return await c.db.delete(d.conversations).where((0,u.eq)(d.conversations.id,t.id)),{success:!0}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to delete conversation"})}}),addMessage:s.sy.input(y).mutation(async({ctx:e,input:t})=>{let r=e.session.user.id;try{if(!await c.db.query.conversations.findFirst({where:(0,u.and)((0,u.eq)(d.conversations.id,t.conversationId),(0,u.eq)(d.conversations.userId,r))}))throw new a.TRPCError({code:"NOT_FOUND",message:"Conversation not found"});let e=await (0,g.ih)(t.content),[n]=await c.db.insert(d.messages).values({id:(0,o.A)(),conversationId:t.conversationId,role:t.role,content:t.content,tokens:e,modelId:t.modelId||l.Sk}).returning();return await c.db.update(d.conversations).set({updatedAt:new Date,lastMessageAt:new Date}).where((0,u.eq)(d.conversations.id,t.conversationId)),{id:n.id,role:n.role,content:n.content,tokens:n.tokens,modelId:n.modelId,createdAt:n.createdAt.toISOString()}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to add message"})}})});n()}catch(e){n(e)}})},85507:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{n:()=>A});var i=r(70762),a=r(61333),o=r(86240),s=r(78499),c=r(11737),d=r(71682),u=r(32767),l=r(70622),g=r(10974),m=e([a,o,s,c,d,u,l]);[a,o,s,c,d,u,l]=m.then?(await m)():m;let p=i.z.object({name:i.z.string().min(1,"Organization name is required").max(100),logo:i.z.string().optional(),website:i.z.string().url().optional().or(i.z.literal("")),billingEmail:i.z.string().email().optional().or(i.z.literal(""))}),y=i.z.object({id:i.z.string().uuid(),name:i.z.string().min(1,"Organization name is required").max(100).optional(),logo:i.z.string().optional(),website:i.z.string().url().optional().or(i.z.literal("")),billingEmail:i.z.string().email().optional().or(i.z.literal("")),plan:i.z.string().optional()}),h=i.z.object({id:i.z.string().uuid()}),R=i.z.object({slug:i.z.string()}),f=i.z.object({organizationId:i.z.string().uuid(),userId:i.z.string().uuid().optional(),role:i.z.enum(["member","admin","owner"]).optional(),invitedEmail:i.z.string().email().optional()}),E=i.z.object({organizationId:i.z.string().uuid(),userId:i.z.string().uuid(),role:i.z.enum(["member","admin","owner"])}),z=i.z.object({organizationId:i.z.string().uuid(),userId:i.z.string().uuid()}),I=i.z.object({organizationId:i.z.string().uuid()}),b=i.z.object({inviteId:i.z.string()}),T=i.z.object({inviteId:i.z.string(),organizationId:i.z.string()}),S=i.z.object({organizationId:i.z.string().uuid(),priceId:i.z.string()}),v=i.z.object({organizationId:i.z.string().uuid()});async function w(e,t){let r=await d.db.select().from(u.organizationMembers).where((0,c.and)((0,c.eq)(u.organizationMembers.userId,e),(0,c.eq)(u.organizationMembers.organizationId,t))).then(e=>e[0]);if(!r)throw new a.TRPCError({code:"FORBIDDEN",message:"You do not have access to this organization"});return r}let A=(0,o.QB)({create:o.sy.input(p).mutation(async({ctx:e,input:t})=>{try{return await s.EC({...t,userId:e.session.user.id})}catch(e){throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to create organization",cause:e})}}),getById:o.sy.input(h).query(async({ctx:e,input:t})=>{try{let r=await s.Sw(t.id);if(!r)throw new a.TRPCError({code:"NOT_FOUND",message:"Organization not found"});if(!await s.oD({organizationId:t.id,userId:e.session.user.id}))throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have access to this organization"});return r}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to get organization",cause:e})}}),getBySlug:o.sy.input(R).query(async({ctx:e,input:t})=>{try{let r=await s.k(t.slug);if(!r)throw new a.TRPCError({code:"NOT_FOUND",message:"Organization not found"});if(!await s.oD({organizationId:r.id,userId:e.session.user.id}))throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have access to this organization"});return r}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to get organization",cause:e})}}),getAll:o.sy.query(async({ctx:e})=>{try{return await s.wV(e.session.user.id)}catch(e){throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to get organizations",cause:e})}}),getMembers:o.sy.input(h).query(async({ctx:e,input:t})=>{try{if(!await s.oD({organizationId:t.id,userId:e.session.user.id}))throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have access to this organization"});return await s.RH(t.id)}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to get organization members",cause:e})}}),update:o.sy.input(y).mutation(async({ctx:e,input:t})=>{try{if(!await s.GM({organizationId:t.id,userId:e.session.user.id,role:"admin"}))throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have permission to update this organization"});let r={...t,logo:null===t.logo?void 0:t.logo,website:null===t.website?void 0:t.website,billingEmail:null===t.billingEmail?void 0:t.billingEmail};return await s.L_(r)}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update organization",cause:e})}}),delete:o.sy.input(h).mutation(async({ctx:e,input:t})=>{try{if(!await s.GM({organizationId:t.id,userId:e.session.user.id,role:"owner"}))throw new a.TRPCError({code:"FORBIDDEN",message:"Only owners can delete an organization"});return await s.Dp(t.id)}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to delete organization",cause:e})}}),addMember:o.sy.input(f).mutation(async({ctx:e,input:t})=>{try{if(!await s.GM({organizationId:t.organizationId,userId:e.session.user.id,role:"admin"}))throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have permission to add members"});if(!t.userId&&!t.invitedEmail)throw new a.TRPCError({code:"BAD_REQUEST",message:"Either userId or invitedEmail must be provided"});return await s.n5({...t,userId:t.userId||e.session.user.id})}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to add member",cause:e})}}),updateMember:o.sy.input(E).mutation(async({ctx:e,input:t})=>{try{if(!await s.GM({organizationId:t.organizationId,userId:e.session.user.id,role:"owner"}))throw new a.TRPCError({code:"FORBIDDEN",message:"Only owners can update member roles"});return await s.bR(t)}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to update member",cause:e})}}),removeMember:o.sy.input(z).mutation(async({ctx:e,input:t})=>{try{let r=await s.GM({organizationId:t.organizationId,userId:e.session.user.id,role:"admin"}),n=e.session.user.id===t.userId;if(!r&&!n)throw new a.TRPCError({code:"FORBIDDEN",message:"You don't have permission to remove members"});return await s.o5(t)}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to remove member",cause:e})}}),setDefault:o.sy.input(I).mutation(async({ctx:e,input:t})=>{try{return await s.lf({userId:e.session.user.id,organizationId:t.organizationId})}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to set default organization",cause:e})}}),getInvite:o.sy.input(b).query(async({input:e})=>{try{let t;let r=await d.db.query.organizationMembers.findFirst({where:(0,c.eq)(u.organizationMembers.id,e.inviteId)});if(!r||r.inviteAccepted)return null;let n=await d.db.query.organizations.findFirst({where:(0,c.eq)(u.organizations.id,r.organizationId)});if(!n)return null;if(r.userId){let e=await d.db.query.users.findFirst({where:(0,c.eq)(u.users.id,r.userId)});t=e?.name||void 0}return{organizationId:r.organizationId,organizationName:n.name,inviterName:t}}catch(e){throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to get invitation",cause:e})}}),acceptInvite:o.sy.input(T).mutation(async({ctx:e,input:t})=>{try{let r=await d.db.query.organizationMembers.findFirst({where:(0,c.and)((0,c.eq)(u.organizationMembers.id,t.inviteId),(0,c.eq)(u.organizationMembers.organizationId,t.organizationId))});if(!r)throw new a.TRPCError({code:"NOT_FOUND",message:"Invitation not found"});if(r.inviteAccepted)throw new a.TRPCError({code:"BAD_REQUEST",message:"Invitation already accepted"});if(r.invitedEmail!==e.session.user.email)throw new a.TRPCError({code:"FORBIDDEN",message:"This invitation is not for you"});await d.db.update(u.organizationMembers).set({userId:e.session.user.id,inviteAccepted:!0,updatedAt:new Date}).where((0,c.eq)(u.organizationMembers.id,t.inviteId));let n=await d.db.query.users.findFirst({where:(0,c.eq)(u.users.id,e.session.user.id)});return n&&!n.defaultOrganizationId&&await d.db.update(u.users).set({defaultOrganizationId:t.organizationId,updatedAt:new Date}).where((0,c.eq)(u.users.id,e.session.user.id)),{success:!0}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to accept invitation",cause:e})}}),declineInvite:o.sy.input(T).mutation(async({ctx:e,input:t})=>{try{let r=await d.db.query.organizationMembers.findFirst({where:(0,c.and)((0,c.eq)(u.organizationMembers.id,t.inviteId),(0,c.eq)(u.organizationMembers.organizationId,t.organizationId))});if(!r)throw new a.TRPCError({code:"NOT_FOUND",message:"Invitation not found"});if(r.inviteAccepted)throw new a.TRPCError({code:"BAD_REQUEST",message:"Invitation already accepted"});if(r.invitedEmail!==e.session.user.email)throw new a.TRPCError({code:"FORBIDDEN",message:"This invitation is not for you"});return await d.db.delete(u.organizationMembers).where((0,c.eq)(u.organizationMembers.id,t.inviteId)),{success:!0}}catch(e){if(e instanceof a.TRPCError)throw e;throw new a.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to decline invitation",cause:e})}}),getSubscriptionStatus:o.sy.input(h).query(async({ctx:e,input:t})=>{let{id:r}=t;return await w(e.session.user.id,r),l.Ub(r)}),getAvailablePlans:o.sy.query(async()=>l.YY()),createCheckoutSession:o.sy.input(S).mutation(async({ctx:e,input:t})=>{let{organizationId:r,priceId:n}=t;await w(e.session.user.id,r);let i=await d.db.select().from(u.organizations).where((0,c.eq)(u.organizations.id,r)).then(e=>e[0]);if(!i)throw new a.TRPCError({code:"NOT_FOUND",message:"Organization not found"});let o=(0,g.$_)();return{url:(await l.Lr({organizationId:r,priceId:n,email:e.session.user.email||"",name:i.name,successUrl:`${o}/org/${i.slug}/settings?checkout=success`,cancelUrl:`${o}/org/${i.slug}/settings?checkout=cancelled`})).url}}),createCustomerPortalSession:o.sy.input(v).mutation(async({ctx:e,input:t})=>{let{organizationId:r}=t;await w(e.session.user.id,r);let n=await d.db.select().from(u.organizations).where((0,c.eq)(u.organizations.id,r)).then(e=>e[0]);if(!n)throw new a.TRPCError({code:"NOT_FOUND",message:"Organization not found"});let i=(0,g.$_)();return{url:(await l.xN({organizationId:r,returnUrl:`${i}/org/${n.slug}/settings`})).url}})});n()}catch(e){n(e)}})},86240:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.d(t,{JI:()=>l,QB:()=>u,ZS:()=>m,q6:()=>c,sy:()=>g});var i=r(61333),a=r(70762),o=r(58178),s=e([i,o]);async function c(){return{session:await (0,o.j2)()}}[i,o]=s.then?(await s)():s;let d=i.initTRPC.context().create({errorFormatter:({shape:e,error:t})=>({...e,data:{...e.data,zodError:t.cause instanceof a.G?t.cause.flatten():null}})}),u=d.router,l=d.procedure,g=d.procedure.use(({ctx:e,next:t})=>{if(!e.session||!e.session.user)throw new i.TRPCError({code:"UNAUTHORIZED"});return t({ctx:{...e,session:{...e.session,user:e.session.user}}})}),m=d.procedure.use(({ctx:e,next:t})=>{if(!e.session||!e.session.user)throw new i.TRPCError({code:"UNAUTHORIZED"});if("admin"!==e.session.user.role)throw new i.TRPCError({code:"FORBIDDEN"});return t({ctx:{...e,session:{...e.session,user:e.session.user}}})});n()}catch(e){n(e)}})},88247:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.r(t),r.d(t,{GET:()=>c,POST:()=>d});var i=r(6797),a=r(34882),o=r(86240),s=e([i,a,o]);async function c(e,t){let r=await t.params;return u(e,r)}async function d(e,t){let r=await t.params;return u(e,r)}async function u(e,t){let r=(t instanceof Promise?await t:t).trpc;return Array.isArray(r)&&r.join(","),(0,i.fetchRequestHandler)({endpoint:"/api/trpc",req:e,router:a.P,createContext:o.q6,onError:void 0})}[i,a,o]=s.then?(await s)():s,n()}catch(e){n(e)}})},94735:e=>{e.exports=require("events")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[4447,4017,2190,1771,4999,1712,6201,4745,1682,8178,9047],()=>r(17862));module.exports=n})();